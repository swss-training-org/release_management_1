name: Production Deployment Request via Tag

on:
  push:
    tags:
      - 'prod-v*'

permissions:
  contents: read
  issues: write
  actions: write
  pull-requests: write

jobs:
  validate-and-plan:
    name: CI Validation & Plan
    runs-on: ubuntu-latest

    outputs:
      plan_output: ${{ steps.plan.outputs.plan_output }}
      issue_number: ${{ steps.createIssue.outputs.issue-number }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Lint Check (Fake)
        run: echo "✅ Linting completed"

      - name: Security Scan (Fake)
        run: echo "✅ Security scan completed"

      - name: Terraform Plan (Fake)
        run: |
          echo "Simulating Terraform plan..."
          echo "# Terraform Plan Output\nResource to be added: 2\nResource to be modified: 1\nResource to be deleted: 0" > plan_output.txt

      - name: Categorize Changes (Fake)
        run: |
          echo "Categorizing plan..."
          echo "Changes categorized as MINOR (1 modify, 2 add)" > change_summary.txt

      - name: Generate Issue Content from Template
        run: |
          echo "📝 Filling deployment issue template"
          cat <<EOF > filled_issue.md
          ## 🚀 Production Deployment Request

          ### 📌 Deployment Tag
          \`${{ github.ref_name }}\`

          ### 📋 Terraform Plan Output
          \`\`\`
          $(cat plan_output.txt)
          \`\`\`

          ### 🧠 Change Categorization
          \`\`\`
          $(cat change_summary.txt)
          \`\`\`

          ### 🧾 Notes
            - Please review the changes and approve or reject this deployment.
            - Deployment will proceed only after manual approval.

          ### 🔗 [Approve Production Deployment (Workflow Run Link)](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

          EOF

      - name: Create GitHub Issue for Approval
        uses: peter-evans/create-issue-from-file@v4
        id : createIssue
        with:
          title: "🚀 Deployment Request for Production - ${{ github.ref_name }}"
          content-filepath: filled_issue.md
          labels: "deployment-request, pending-approval"
          assignees: yaoswisscom
        

  apply-on-approval:
    name: Apply to Production
    if: github.event.issue.title == '🚀 Deployment Request for Production - ${{ github.ref_name }}'
    runs-on: ubuntu-latest
    needs: validate-and-plan
    environment:
      name: production
    outputs:
      approved: ${{ steps.set-outputs.approved }}

    steps:
      - name: Set outputs
        id: set-outputs
        run: |
          echo "approved=true" >> $GITHUB_OUTPUT

      - name: Terraform Apply (Fake)
        run: echo "✅ Terraform Apply simulated"

      - name: Create comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ needs.validate-and-plan.outputs.issue_number }}
          body: |
            ✅ Deployment for tag `${{ github.ref_name }}` has been successfully applied to production.

            ### Summary of Changes
            - Resources added: 2
            - Resources modified: 1
            - Resources deleted: 0

            Thank you for your approval! 🎉
          reactions: '+1'

  rejected-notification:
    name: Rejection Handler
    if: ${{ failure() && (needs.apply-on-approval.result != 'failure' || (needs.apply-on-approval.result == 'failure' && needs.apply-on-approval.outputs.approved == 'true')) }}  # Or conditionally on a 'rejected' trigger
    runs-on: ubuntu-latest
    needs: validate-and-plan

    steps:
      - name: Comment on Rejection
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ needs.validate-and-plan.outputs.issue_number }}
          body: |
            ❌ Deployment for tag `${{ github.ref_name }}` has been **rejected** and will not proceed.

            Please update the code or re-request deployment once issues are addressed.
          reactions: 'confused'